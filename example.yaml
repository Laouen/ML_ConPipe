general:
  modules_directories: ['/path/code']
  verbose: 1
data:
  data_directory: '/path/data'
data_preprocess:
  functions: ['preprocess_data']
  functions_parameters:
feature_extraction:
  functions: ['extract_features']
  functions_parameters:
    extract_feature:
      param1: 1
      param2: 2
  columns_to_include: []
  columns_to_drop: []
  target_col: ''
  group_col: '' # solo se usa si model_selection.evaluation_schema es GroupKFold
data_augmentation:
  functions: []
evaluation_schema:
  schema: 'train_test'
  function: 'train_test_split'
  parameters:
    test_size: None
    random_state: 42
    shuffle: On
model_selection:
  models: ['LogisticRegression', 'RandomForestClassifier']
  param_grid:
    LogisticRegression:
      penalty: ['l1', 'l2']
      C: [0, 0.2, 0.4, 0.6, 0.8, 1.0]
      solver: ['lbfgs', 'saga', 'liblinear']
    RandomForestClassifier:
      n_estimators: [10, 100, 1000]
      criterion: ['gini', 'entropy']
      max_depth: [2,6,10]
  fit_params:
    LogisticRegression:
      sample_weight: None
    RandomForestClassifier:
      sample_weight: None
  parameter_optimizer: 'GridSearchCV'
  parameter_optimizer_params: 
    refit: On
  scoring: 'accuracy' # esto tiene que poder ser una funcion custom desde el módulo también
  cv: 'StratifiedKFold'
  cv_parameters:
    n_splits: 5
    shuffle: On
    random_state: 42
model_evaluation:
  scores: ['accuracy', 'recall', 'auc']
  charts: ['roc']